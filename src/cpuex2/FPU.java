package cpuex2;

public class FPU {
	public static void printFloat(float a) {
		int ai = Float.floatToIntBits(a);
		
		for (int i=31; i>=0; i--) {
			System.out.print((ai >>> i) & 1);
		}
	}
	
	public static boolean bit_check(int a, int i) {
		return (((a >> i) & 1) == 1);
	}
	
	public static int bit_clear(int a, int i) {
		return a & ~(1 << i);
	}
	
	public static int bit_set(int a, int i) {
		return a | (1 << i);
	}
	
	public static float fadd(float a, float b) {
		int ai, bi;
		ai = Float.floatToIntBits(a);
		bi = Float.floatToIntBits(b);
		
		int sign=0;
		int exp=0;
		int frac=0;
		int ci;
		
		int expl, exps, fracl, fracs;
		int shamt;
		int lzc;
		int round;
		
		boolean operation = true; // true:add false:sub
		
		if (!bit_check(ai, 31) && !bit_check(bi, 31)) {
			operation = true;
		} else if (!bit_check(ai, 31) && bit_check(bi, 31)) {
			operation = false;
		} else if (bit_check(ai, 31) && !bit_check(bi, 31)) {
			operation = false;
		} else if (bit_check(ai, 31) && bit_check(bi, 31)) {
			operation = true;
		}
		
		if (bit_clear(ai, 31) >= bit_clear(bi, 31)) {
			if (bit_check(ai, 31)) {
				sign = 1;
			} else {
				sign = 0;
			}
			expl = ai >>> 23;
			expl = bit_clear(expl, 8);
			exps = bi >>> 23;
			exps = bit_clear(exps, 8);
			fracl = ai & 0x7FFFFF;
			fracl = fracl << 3;
			fracs = bi & 0x7FFFFF;
			fracs = fracs << 3;
		} else {
			if (bit_check(bi, 31)) {
				sign = 1;
			} else {
				sign = 0;
			}
			expl = bi >>> 23;
			expl = bit_clear(expl, 8);
			exps = ai >>> 23;
			exps = bit_clear(exps, 8);
			fracl = bi & 0x7FFFFF;
			fracl = fracl << 3;
			fracs = ai & 0x7FFFFF;
			fracs = fracs << 3;
		}
		
		shamt = expl - exps;
		
		if (expl == 0) {
			fracl = 0;
		}
		fracl = bit_set(fracl, 26);
		
		fracs = bit_set(fracs, 26);
		for (int i=0; i<shamt; i++) {
			if (bit_check(fracs, 0)) {
				fracs = fracs >>> 1;
				fracs = bit_set(fracs, 0);
			} else {
				fracs = fracs >>> 1;
			}
		}
		if (exps == 0) {
			fracs = 0;
		}
		
		if (operation) {
			frac = fracl + fracs;
		} else {
			frac = fracl - fracs;
		}
		
		ci = ((sign & 1) << 31) + ((exp & 0xFF) << 23) + (frac & 0x7FFFFF);
		
		lzc = 0;
		for (int i=27; !bit_check(frac, i); i--) {
			if (i<0) {
				lzc = 31;
				break;
			}
			lzc++;
		}
		
		if ((frac & 0x7FFFFFC) == 0x7FFFFFC && !bit_check(frac, 27)) {
			exp = expl + 2;
		} else if ((frac & 0x3FFFFFE) == 0x3FFFFFE && !bit_check(frac, 27) && !bit_check(frac, 26)) {
			exp = expl + 2;
		} else {
			exp = expl + 1;
		}
		
		round = 0;
		if (lzc == 0) {
			if (bit_check(frac, 3) && (bit_check(frac, 4) || bit_check(frac, 2) || bit_check(frac, 1) || bit_check(frac, 0))) {
				round = 1;
			}
		} else if (lzc == 1) {
			if(bit_check(frac, 2) && (bit_check(frac, 3) || bit_check(frac, 1) || bit_check(frac, 0))) {
				round = 1;
			}
		} else {
			if(bit_check(frac, 1) && (bit_check(frac, 2) || bit_check(frac, 0))){
				round = 1;
			}
		}
		
		if((lzc & 3) == 0){
			frac = bit_clear(frac, 27);
		}else if((lzc & 3) == 1){
			frac = frac << 1;
			frac = bit_clear(frac, 28);
			frac = bit_clear(frac, 27);
		}else if((lzc & 3) == 2){
			frac = frac << 2;
			frac = bit_clear(frac, 29);
			frac = bit_clear(frac, 28);
			frac = bit_clear(frac, 27);
		}else if((lzc & 3) == 3){
			frac = frac << 3;
			frac = bit_clear(frac, 30);
			frac = bit_clear(frac, 29);
			frac = bit_clear(frac, 28);
			frac = bit_clear(frac, 27);
		}
		
		if((lzc & 28) == 0){
			frac = frac + round * 16;
		}else if((lzc & 28) == 4){
			frac = frac << 4;
			frac = frac & 0x7FFFFFF;
		}else if((lzc & 28) == 8){
			frac = frac << 8;
			frac = frac & 0x7FFFFF0;
		}else if((lzc & 28) == 12){
			frac = frac << 12;
			frac = frac & 0x7FFFF00;
		}else if((lzc & 28) == 16){
			frac = frac << 16;
			frac = frac & 0x7FFF000;
		}else if((lzc & 28) == 20){
			frac = frac << 20;
			frac = frac & 0x7FF0000;
		}else if((lzc & 28) == 24){
			frac = frac << 24;
			frac = frac & 0x7F00000;
		}
		frac = frac >>> 4;
		frac &= 0x7FFFFF;
		
		if(lzc == 31){
			exp = 0;
		}else if(exp <= lzc){
			exp = 0;
		}else{
			exp = exp - lzc;
		}
		
		ci = 0;
		if (sign == 1) ci = bit_set(ci, 31);
		ci = ci | ((exp & 255) << 23);
		ci = ci | (frac & 0x7FFFFF);
		
		return Float.intBitsToFloat(ci);
	}
	
	public static float fsub(float a, float b) {
		return fadd(a, -b);
	}
	
	public static float fmul(float a, float b) {
		int ai, bi, ci=0;
		ai = Float.floatToIntBits(a);
		bi = Float.floatToIntBits(b);
		
		int a_sign, a_exp, a_frac;
		int b_sign, b_exp, b_frac;
		int sign, exp, frac;
		
		a_sign = (ai >>> 31) & 1;
		a_exp = ai >>> 23 & 255;
		a_frac = ai & 0x7FFFFF;
		
		b_sign = bi >>> 31 & 1;
		b_exp = bi >>> 23 & 255;
		b_frac = bi & 0x7FFFFF;
		
		// signals
		boolean iszero = false;
		
		// zero detection
		if (ai == 0 || bi == 0) iszero = true;
		
		// Step 1.
		int ah, al, bh, bl;
		ah = a_frac >> 11;
		al = a_frac & 2047;
		bh = b_frac >> 11;
		bl = b_frac & 2047;
		
		// Step 2.
		ah += (1 << 12);
		bh += (1 << 12);
		int hh, hl, lh;
		hh = ah*bh;
		hl = ah*bl;
		lh = al*bh;
		
		// Step 3.
		frac = hh + (hl >> 11) + (lh >> 11) + 2;
		
		// Step 4.
		int i;
		for (i=31; i>22; i--) {
			if ((frac >> i) != 0) {
				frac = (frac >> i-23) & 0x7FFFFF;
				break;
			}
		}
		
		// Step 5.
		if (i==25)
			exp = a_exp + b_exp + 130;
		else
			exp = a_exp + b_exp + 129;
		
		if ((exp & 256) == 0) exp = 0; //underflow
		
		if (exp == 0 || (exp & 255) == 255)
			frac = 0;
		
		sign = a_sign ^ b_sign;
		
		ci = ((sign & 1) << 31) | ((exp & 0xFF) << 23) | (frac & 0x7FFFFF);
		
		// zero
		if (iszero) ci = 0;
		
		return Float.intBitsToFloat(ci);
	}
	
	static int[][] inv_table = {
			{8388605, 8184},
			{8372237, 8168},
			{8355900, 8152},
			{8339596, 8136},
			{8323324, 8120},
			{8307083, 8104},
			{8290873, 8088},
			{8274695, 8073},
			{8258549, 8057},
			{8242433, 8042},
			{8226349, 8026},
			{8210296, 8011},
			{8194274, 7995},
			{8178283, 7980},
			{8162322, 7964},
			{8146393, 7949},
			{8130494, 7934},
			{8114625, 7919},
			{8098787, 7903},
			{8082980, 7888},
			{8067202, 7873},
			{8051455, 7858},
			{8035738, 7843},
			{8020051, 7828},
			{8004394, 7813},
			{7988766, 7798},
			{7973169, 7783},
			{7957601, 7769},
			{7942063, 7754},
			{7926554, 7739},
			{7911075, 7724},
			{7895625, 7710},
			{7880204, 7695},
			{7864813, 7681},
			{7849450, 7666},
			{7834117, 7652},
			{7818813, 7637},
			{7803537, 7623},
			{7788290, 7609},
			{7773072, 7594},
			{7757883, 7580},
			{7742722, 7566},
			{7727589, 7552},
			{7712485, 7537},
			{7697409, 7523},
			{7682361, 7509},
			{7667342, 7495},
			{7652350, 7481},
			{7637386, 7467},
			{7622451, 7453},
			{7607543, 7440},
			{7592663, 7426},
			{7577810, 7412},
			{7562985, 7398},
			{7548188, 7384},
			{7533418, 7371},
			{7518675, 7357},
			{7503960, 7344},
			{7489272, 7330},
			{7474611, 7316},
			{7459977, 7303},
			{7445370, 7290},
			{7430790, 7276},
			{7416237, 7263},
			{7401710, 7249},
			{7387210, 7236},
			{7372737, 7223},
			{7358290, 7210},
			{7343870, 7196},
			{7329476, 7183},
			{7315109, 7170},
			{7300767, 7157},
			{7286452, 7144},
			{7272163, 7131},
			{7257900, 7118},
			{7243663, 7105},
			{7229452, 7092},
			{7215267, 7079},
			{7201107, 7066},
			{7186973, 7054},
			{7172865, 7041},
			{7158782, 7028},
			{7144725, 7015},
			{7130693, 7003},
			{7116686, 6990},
			{7102705, 6978},
			{7088749, 6965},
			{7074818, 6952},
			{7060912, 6940},
			{7047031, 6928},
			{7033175, 6915},
			{7019344, 6903},
			{7005537, 6890},
			{6991756, 6878},
			{6977999, 6866},
			{6964266, 6853},
			{6950558, 6841},
			{6936875, 6829},
			{6923216, 6817},
			{6909581, 6805},
			{6895971, 6793},
			{6882384, 6781},
			{6868822, 6769},
			{6855284, 6757},
			{6841770, 6745},
			{6828280, 6733},
			{6814814, 6721},
			{6801371, 6709},
			{6787952, 6697},
			{6774557, 6685},
			{6761186, 6673},
			{6747838, 6662},
			{6734514, 6650},
			{6721213, 6638},
			{6707935, 6627},
			{6694681, 6615},
			{6681450, 6603},
			{6668243, 6592},
			{6655058, 6580},
			{6641896, 6569},
			{6628758, 6557},
			{6615642, 6546},
			{6602549, 6534},
			{6589480, 6523},
			{6576433, 6512},
			{6563408, 6500},
			{6550406, 6489},
			{6537427, 6478},
			{6524471, 6467},
			{6511536, 6455},
			{6498625, 6444},
			{6485735, 6433},
			{6472868, 6422},
			{6460023, 6411},
			{6447201, 6400},
			{6434400, 6389},
			{6421622, 6378},
			{6408865, 6367},
			{6396131, 6356},
			{6383418, 6345},
			{6370728, 6334},
			{6358059, 6323},
			{6345411, 6312},
			{6332786, 6301},
			{6320182, 6291},
			{6307600, 6280},
			{6295039, 6269},
			{6282499, 6259},
			{6269981, 6248},
			{6257485, 6237},
			{6245009, 6227},
			{6232555, 6216},
			{6220122, 6205},
			{6207710, 6195},
			{6195320, 6184},
			{6182950, 6174},
			{6170601, 6163},
			{6158273, 6153},
			{6145966, 6143},
			{6133680, 6132},
			{6121415, 6122},
			{6109170, 6112},
			{6096946, 6101},
			{6084742, 6091},
			{6072559, 6081},
			{6060397, 6071},
			{6048255, 6060},
			{6036133, 6050},
			{6024032, 6040},
			{6011951, 6030},
			{5999890, 6020},
			{5987850, 6010},
			{5975829, 6000},
			{5963829, 5990},
			{5951848, 5980},
			{5939888, 5970},
			{5927948, 5960},
			{5916027, 5950},
			{5904126, 5940},
			{5892246, 5930},
			{5880384, 5920},
			{5868543, 5910},
			{5856721, 5901},
			{5844919, 5891},
			{5833136, 5881},
			{5821373, 5871},
			{5809629, 5862},
			{5797905, 5852},
			{5786200, 5842},
			{5774514, 5833},
			{5762847, 5823},
			{5751200, 5814},
			{5739572, 5804},
			{5727963, 5794},
			{5716373, 5785},
			{5704802, 5775},
			{5693250, 5766},
			{5681717, 5757},
			{5670203, 5747},
			{5658708, 5738},
			{5647231, 5728},
			{5635773, 5719},
			{5624334, 5710},
			{5612914, 5700},
			{5601512, 5691},
			{5590128, 5682},
			{5578764, 5673},
			{5567417, 5663},
			{5556089, 5654},
			{5544780, 5645},
			{5533488, 5636},
			{5522215, 5627},
			{5510961, 5618},
			{5499724, 5609},
			{5488506, 5600},
			{5477306, 5591},
			{5466123, 5582},
			{5454959, 5573},
			{5443813, 5564},
			{5432685, 5555},
			{5421575, 5546},
			{5410482, 5537},
			{5399407, 5528},
			{5388350, 5519},
			{5377311, 5510},
			{5366290, 5501},
			{5355286, 5493},
			{5344299, 5484},
			{5333331, 5475},
			{5322379, 5466},
			{5311445, 5458},
			{5300529, 5449},
			{5289630, 5440},
			{5278748, 5432},
			{5267884, 5423},
			{5257037, 5414},
			{5246207, 5406},
			{5235394, 5397},
			{5224599, 5389},
			{5213820, 5380},
			{5203059, 5372},
			{5192315, 5363},
			{5181587, 5355},
			{5170877, 5346},
			{5160183, 5338},
			{5149506, 5329},
			{5138846, 5321},
			{5128203, 5313},
			{5117577, 5304},
			{5106967, 5296},
			{5096374, 5288},
			{5085798, 5279},
			{5075238, 5271},
			{5064694, 5263},
			{5054168, 5255},
			{5043657, 5246},
			{5033163, 5238},
			{5022686, 5230},
			{5012224, 5222},
			{5001780, 5214},
			{4991351, 5206},
			{4980938, 5198},
			{4970542, 5190},
			{4960162, 5181},
			{4949798, 5173},
			{4939450, 5165},
			{4929119, 5157},
			{4918803, 5149},
			{4908503, 5141},
			{4898219, 5134},
			{4887951, 5126},
			{4877699, 5118},
			{4867462, 5110},
			{4857242, 5102},
			{4847037, 5094},
			{4836848, 5086},
			{4826675, 5078},
			{4816517, 5071},
			{4806375, 5063},
			{4796248, 5055},
			{4786137, 5047},
			{4776041, 5040},
			{4765961, 5032},
			{4755896, 5024},
			{4745847, 5016},
			{4735813, 5009},
			{4725795, 5001},
			{4715791, 4994},
			{4705803, 4986},
			{4695830, 4978},
			{4685872, 4971},
			{4675930, 4963},
			{4666002, 4956},
			{4656090, 4948},
			{4646193, 4941},
			{4636310, 4933},
			{4626443, 4926},
			{4616591, 4918},
			{4606753, 4911},
			{4596930, 4903},
			{4587123, 4896},
			{4577330, 4889},
			{4567551, 4881},
			{4557788, 4874},
			{4548039, 4867},
			{4538305, 4859},
			{4528586, 4852},
			{4518881, 4845},
			{4509190, 4837},
			{4499515, 4830},
			{4489853, 4823},
			{4480207, 4816},
			{4470574, 4808},
			{4460956, 4801},
			{4451353, 4794},
			{4441764, 4787},
			{4432189, 4780},
			{4422628, 4773},
			{4413082, 4766},
			{4403549, 4758},
			{4394031, 4751},
			{4384528, 4744},
			{4375038, 4737},
			{4365562, 4730},
			{4356101, 4723},
			{4346653, 4716},
			{4337220, 4709},
			{4327800, 4702},
			{4318395, 4695},
			{4309003, 4688},
			{4299625, 4682},
			{4290261, 4675},
			{4280911, 4668},
			{4271574, 4661},
			{4262252, 4654},
			{4252943, 4647},
			{4243648, 4640},
			{4234366, 4633},
			{4225098, 4627},
			{4215844, 4620},
			{4206603, 4613},
			{4197376, 4606},
			{4188162, 4600},
			{4178962, 4593},
			{4169775, 4586},
			{4160601, 4580},
			{4151441, 4573},
			{4142295, 4566},
			{4133161, 4560},
			{4124041, 4553},
			{4114935, 4546},
			{4105841, 4540},
			{4096761, 4533},
			{4087694, 4526},
			{4078640, 4520},
			{4069599, 4513},
			{4060571, 4507},
			{4051557, 4500},
			{4042555, 4494},
			{4033567, 4487},
			{4024591, 4481},
			{4015629, 4474},
			{4006679, 4468},
			{3997742, 4461},
			{3988818, 4455},
			{3979907, 4449},
			{3971009, 4442},
			{3962124, 4436},
			{3953251, 4429},
			{3944391, 4423},
			{3935544, 4417},
			{3926709, 4410},
			{3917887, 4404},
			{3909078, 4398},
			{3900282, 4392},
			{3891498, 4385},
			{3882726, 4379},
			{3873967, 4373},
			{3865221, 4367},
			{3856487, 4360},
			{3847765, 4354},
			{3839056, 4348},
			{3830359, 4342},
			{3821675, 4336},
			{3813003, 4329},
			{3804343, 4323},
			{3795695, 4317},
			{3787060, 4311},
			{3778437, 4305},
			{3769826, 4299},
			{3761228, 4293},
			{3752641, 4287},
			{3744067, 4281},
			{3735505, 4275},
			{3726955, 4269},
			{3718416, 4263},
			{3709890, 4257},
			{3701376, 4251},
			{3692874, 4245},
			{3684384, 4239},
			{3675906, 4233},
			{3667440, 4227},
			{3658985, 4221},
			{3650543, 4215},
			{3642112, 4209},
			{3633693, 4203},
			{3625286, 4197},
			{3616890, 4191},
			{3608506, 4186},
			{3600134, 4180},
			{3591774, 4174},
			{3583425, 4168},
			{3575088, 4162},
			{3566763, 4156},
			{3558449, 4151},
			{3550147, 4145},
			{3541856, 4139},
			{3533576, 4133},
			{3525309, 4128},
			{3517052, 4122},
			{3508807, 4116},
			{3500574, 4111},
			{3492352, 4105},
			{3484141, 4099},
			{3475942, 4094},
			{3467754, 4088},
			{3459577, 4082},
			{3451411, 4077},
			{3443257, 4071},
			{3435114, 4065},
			{3426982, 4060},
			{3418861, 4054},
			{3410752, 4049},
			{3402653, 4043},
			{3394566, 4038},
			{3386490, 4032},
			{3378425, 4027},
			{3370371, 4021},
			{3362328, 4016},
			{3354296, 4010},
			{3346274, 4005},
			{3338264, 3999},
			{3330265, 3994},
			{3322277, 3988},
			{3314299, 3983},
			{3306333, 3977},
			{3298377, 3972},
			{3290432, 3967},
			{3282498, 3961},
			{3274575, 3956},
			{3266662, 3950},
			{3258760, 3945},
			{3250869, 3940},
			{3242988, 3934},
			{3235119, 3929},
			{3227259, 3924},
			{3219411, 3918},
			{3211573, 3913},
			{3203746, 3908},
			{3195929, 3903},
			{3188122, 3897},
			{3180327, 3892},
			{3172541, 3887},
			{3164767, 3882},
			{3157002, 3876},
			{3149248, 3871},
			{3141505, 3866},
			{3133772, 3861},
			{3126049, 3856},
			{3118336, 3851},
			{3110634, 3845},
			{3102943, 3840},
			{3095261, 3835},
			{3087590, 3830},
			{3079929, 3825},
			{3072278, 3820},
			{3064637, 3815},
			{3057007, 3810},
			{3049387, 3805},
			{3041777, 3799},
			{3034177, 3794},
			{3026587, 3789},
			{3019007, 3784},
			{3011437, 3779},
			{3003877, 3774},
			{2996328, 3769},
			{2988788, 3764},
			{2981258, 3759},
			{2973739, 3754},
			{2966229, 3749},
			{2958729, 3744},
			{2951239, 3740},
			{2943759, 3735},
			{2936289, 3730},
			{2928828, 3725},
			{2921378, 3720},
			{2913937, 3715},
			{2906506, 3710},
			{2899085, 3705},
			{2891673, 3700},
			{2884271, 3696},
			{2876879, 3691},
			{2869497, 3686},
			{2862124, 3681},
			{2854761, 3676},
			{2847408, 3671},
			{2840064, 3667},
			{2832730, 3662},
			{2825405, 3657},
			{2818090, 3652},
			{2810785, 3648},
			{2803489, 3643},
			{2796202, 3638},
			{2788925, 3633},
			{2781657, 3629},
			{2774399, 3624},
			{2767151, 3619},
			{2759911, 3614},
			{2752681, 3610},
			{2745461, 3605},
			{2738250, 3600},
			{2731048, 3596},
			{2723855, 3591},
			{2716672, 3586},
			{2709498, 3582},
			{2702333, 3577},
			{2695178, 3573},
			{2688032, 3568},
			{2680895, 3563},
			{2673767, 3559},
			{2666648, 3554},
			{2659539, 3550},
			{2652438, 3545},
			{2645347, 3541},
			{2638265, 3536},
			{2631192, 3531},
			{2624128, 3527},
			{2617073, 3522},
			{2610027, 3518},
			{2602990, 3513},
			{2595962, 3509},
			{2588944, 3504},
			{2581934, 3500},
			{2574933, 3496},
			{2567941, 3491},
			{2560957, 3487},
			{2553983, 3482},
			{2547018, 3478},
			{2540061, 3473},
			{2533114, 3469},
			{2526175, 3465},
			{2519245, 3460},
			{2512324, 3456},
			{2505411, 3451},
			{2498507, 3447},
			{2491613, 3443},
			{2484726, 3438},
			{2477849, 3434},
			{2470980, 3430},
			{2464120, 3425},
			{2457268, 3421},
			{2450426, 3417},
			{2443591, 3412},
			{2436766, 3408},
			{2429949, 3404},
			{2423140, 3399},
			{2416341, 3395},
			{2409549, 3391},
			{2402767, 3387},
			{2395992, 3382},
			{2389227, 3378},
			{2382469, 3374},
			{2375721, 3370},
			{2368980, 3365},
			{2362248, 3361},
			{2355525, 3357},
			{2348810, 3353},
			{2342103, 3349},
			{2335405, 3344},
			{2328715, 3340},
			{2322033, 3336},
			{2315360, 3332},
			{2308695, 3328},
			{2302038, 3324},
			{2295390, 3320},
			{2288750, 3315},
			{2282118, 3311},
			{2275494, 3307},
			{2268879, 3303},
			{2262271, 3299},
			{2255672, 3295},
			{2249081, 3291},
			{2242499, 3287},
			{2235924, 3283},
			{2229358, 3279},
			{2222799, 3275},
			{2216249, 3271},
			{2209707, 3267},
			{2203173, 3263},
			{2196647, 3259},
			{2190129, 3254},
			{2183619, 3250},
			{2177117, 3246},
			{2170623, 3243},
			{2164137, 3239},
			{2157659, 3235},
			{2151189, 3231},
			{2144726, 3227},
			{2138272, 3223},
			{2131826, 3219},
			{2125387, 3215},
			{2118957, 3211},
			{2112534, 3207},
			{2106119, 3203},
			{2099712, 3199},
			{2093313, 3195},
			{2086922, 3191},
			{2080538, 3187},
			{2074162, 3184},
			{2067794, 3180},
			{2061434, 3176},
			{2055081, 3172},
			{2048736, 3168},
			{2042399, 3164},
			{2036069, 3160},
			{2029748, 3157},
			{2023433, 3153},
			{2017127, 3149},
			{2010828, 3145},
			{2004537, 3141},
			{1998253, 3138},
			{1991977, 3134},
			{1985709, 3130},
			{1979448, 3126},
			{1973194, 3122},
			{1966949, 3119},
			{1960710, 3115},
			{1954480, 3111},
			{1948256, 3107},
			{1942041, 3104},
			{1935832, 3100},
			{1929631, 3096},
			{1923438, 3092},
			{1917252, 3089},
			{1911073, 3085},
			{1904902, 3081},
			{1898738, 3078},
			{1892582, 3074},
			{1886433, 3070},
			{1880291, 3067},
			{1874157, 3063},
			{1868030, 3059},
			{1861910, 3056},
			{1855798, 3052},
			{1849693, 3048},
			{1843595, 3045},
			{1837504, 3041},
			{1831421, 3038},
			{1825345, 3034},
			{1819276, 3030},
			{1813214, 3027},
			{1807160, 3023},
			{1801112, 3020},
			{1795072, 3016},
			{1789039, 3012},
			{1783013, 3009},
			{1776995, 3005},
			{1770983, 3002},
			{1764979, 2998},
			{1758981, 2995},
			{1752991, 2991},
			{1747008, 2988},
			{1741031, 2984},
			{1735062, 2981},
			{1729100, 2977},
			{1723145, 2974},
			{1717197, 2970},
			{1711256, 2967},
			{1705322, 2963},
			{1699395, 2960},
			{1693474, 2956},
			{1687561, 2953},
			{1681655, 2949},
			{1675756, 2946},
			{1669863, 2942},
			{1663977, 2939},
			{1658099, 2935},
			{1652227, 2932},
			{1646362, 2929},
			{1640504, 2925},
			{1634653, 2922},
			{1628808, 2918},
			{1622970, 2915},
			{1617140, 2912},
			{1611316, 2908},
			{1605498, 2905},
			{1599688, 2901},
			{1593884, 2898},
			{1588087, 2895},
			{1582297, 2891},
			{1576513, 2888},
			{1570736, 2885},
			{1564966, 2881},
			{1559202, 2878},
			{1553446, 2875},
			{1547695, 2871},
			{1541952, 2868},
			{1536215, 2865},
			{1530485, 2861},
			{1524761, 2858},
			{1519044, 2855},
			{1513334, 2851},
			{1507630, 2848},
			{1501932, 2845},
			{1496242, 2842},
			{1490557, 2838},
			{1484880, 2835},
			{1479209, 2832},
			{1473544, 2829},
			{1467886, 2825},
			{1462234, 2822},
			{1456589, 2819},
			{1450950, 2816},
			{1445318, 2812},
			{1439692, 2809},
			{1434073, 2806},
			{1428460, 2803},
			{1422853, 2800},
			{1417253, 2796},
			{1411659, 2793},
			{1406072, 2790},
			{1400491, 2787},
			{1394916, 2784},
			{1389348, 2780},
			{1383786, 2777},
			{1378230, 2774},
			{1372681, 2771},
			{1367138, 2768},
			{1361601, 2765},
			{1356071, 2762},
			{1350547, 2758},
			{1345029, 2755},
			{1339517, 2752},
			{1334012, 2749},
			{1328512, 2746},
			{1323019, 2743},
			{1317533, 2740},
			{1312052, 2737},
			{1306577, 2734},
			{1301109, 2731},
			{1295647, 2727},
			{1290191, 2724},
			{1284741, 2721},
			{1279298, 2718},
			{1273860, 2715},
			{1268429, 2712},
			{1263004, 2709},
			{1257584, 2706},
			{1252171, 2703},
			{1246764, 2700},
			{1241363, 2697},
			{1235968, 2694},
			{1230579, 2691},
			{1225197, 2688},
			{1219820, 2685},
			{1214449, 2682},
			{1209084, 2679},
			{1203725, 2676},
			{1198372, 2673},
			{1193025, 2670},
			{1187685, 2667},
			{1182350, 2664},
			{1177020, 2661},
			{1171697, 2658},
			{1166380, 2655},
			{1161069, 2652},
			{1155764, 2649},
			{1150464, 2646},
			{1145170, 2643},
			{1139883, 2640},
			{1134601, 2638},
			{1129325, 2635},
			{1124055, 2632},
			{1118790, 2629},
			{1113532, 2626},
			{1108279, 2623},
			{1103032, 2620},
			{1097791, 2617},
			{1092556, 2614},
			{1087326, 2611},
			{1082102, 2609},
			{1076884, 2606},
			{1071672, 2603},
			{1066466, 2600},
			{1061265, 2597},
			{1056070, 2594},
			{1050880, 2591},
			{1045697, 2588},
			{1040519, 2586},
			{1035346, 2583},
			{1030180, 2580},
			{1025019, 2577},
			{1019863, 2574},
			{1014714, 2572},
			{1009570, 2569},
			{1004431, 2566},
			{999298, 2563},
			{994171, 2560},
			{989050, 2558},
			{983934, 2555},
			{978823, 2552},
			{973718, 2549},
			{968619, 2546},
			{963525, 2544},
			{958437, 2541},
			{953354, 2538},
			{948277, 2535},
			{943206, 2533},
			{938139, 2530},
			{933079, 2527},
			{928024, 2524},
			{922974, 2522},
			{917930, 2519},
			{912891, 2516},
			{907858, 2513},
			{902830, 2511},
			{897808, 2508},
			{892791, 2505},
			{887779, 2503},
			{882773, 2500},
			{877772, 2497},
			{872777, 2494},
			{867787, 2492},
			{862802, 2489},
			{857823, 2486},
			{852849, 2484},
			{847881, 2481},
			{842917, 2478},
			{837960, 2476},
			{833007, 2473},
			{828060, 2470},
			{823118, 2468},
			{818181, 2465},
			{813250, 2463},
			{808324, 2460},
			{803403, 2457},
			{798488, 2455},
			{793577, 2452},
			{788672, 2449},
			{783773, 2447},
			{778878, 2444},
			{773989, 2442},
			{769105, 2439},
			{764226, 2436},
			{759352, 2434},
			{754483, 2431},
			{749620, 2429},
			{744762, 2426},
			{739909, 2423},
			{735061, 2421},
			{730218, 2418},
			{725381, 2416},
			{720548, 2413},
			{715721, 2411},
			{710899, 2408},
			{706082, 2406},
			{701270, 2403},
			{696463, 2400},
			{691661, 2398},
			{686864, 2395},
			{682073, 2393},
			{677286, 2390},
			{672504, 2388},
			{667728, 2385},
			{662956, 2383},
			{658190, 2380},
			{653428, 2378},
			{648672, 2375},
			{643920, 2373},
			{639174, 2370},
			{634432, 2368},
			{629696, 2365},
			{624964, 2363},
			{620238, 2360},
			{615516, 2358},
			{610800, 2355},
			{606088, 2353},
			{601381, 2350},
			{596679, 2348},
			{591982, 2346},
			{587290, 2343},
			{582603, 2341},
			{577921, 2338},
			{573243, 2336},
			{568571, 2333},
			{563903, 2331},
			{559240, 2328},
			{554583, 2326},
			{549929, 2324},
			{545281, 2321},
			{540638, 2319},
			{535999, 2316},
			{531366, 2314},
			{526737, 2312},
			{522112, 2309},
			{517493, 2307},
			{512879, 2304},
			{508269, 2302},
			{503664, 2300},
			{499063, 2297},
			{494468, 2295},
			{489877, 2292},
			{485291, 2290},
			{480710, 2288},
			{476133, 2285},
			{471562, 2283},
			{466995, 2281},
			{462432, 2278},
			{457875, 2276},
			{453322, 2274},
			{448773, 2271},
			{444230, 2269},
			{439691, 2267},
			{435156, 2264},
			{430627, 2262},
			{426102, 2260},
			{421581, 2257},
			{417066, 2255},
			{412554, 2253},
			{408048, 2250},
			{403546, 2248},
			{399049, 2246},
			{394556, 2244},
			{390068, 2241},
			{385585, 2239},
			{381106, 2237},
			{376631, 2234},
			{372162, 2232},
			{367696, 2230},
			{363236, 2228},
			{358780, 2225},
			{354328, 2223},
			{349881, 2221},
			{345438, 2219},
			{341000, 2216},
			{336567, 2214},
			{332138, 2212},
			{327713, 2210},
			{323293, 2207},
			{318878, 2205},
			{314467, 2203},
			{310060, 2201},
			{305658, 2198},
			{301260, 2196},
			{296867, 2194},
			{292478, 2192},
			{288094, 2189},
			{283714, 2187},
			{279338, 2185},
			{274967, 2183},
			{270600, 2181},
			{266238, 2178},
			{261880, 2176},
			{257526, 2174},
			{253177, 2172},
			{248832, 2170},
			{244492, 2168},
			{240156, 2165},
			{235824, 2163},
			{231497, 2161},
			{227174, 2159},
			{222855, 2157},
			{218541, 2155},
			{214231, 2152},
			{209925, 2150},
			{205624, 2148},
			{201327, 2146},
			{197034, 2144},
			{192745, 2142},
			{188461, 2139},
			{184181, 2137},
			{179905, 2135},
			{175634, 2133},
			{171367, 2131},
			{167104, 2129},
			{162845, 2127},
			{158591, 2125},
			{154340, 2122},
			{150094, 2120},
			{145853, 2118},
			{141615, 2116},
			{137382, 2114},
			{133152, 2112},
			{128928, 2110},
			{124707, 2108},
			{120490, 2106},
			{116278, 2104},
			{112069, 2102},
			{107865, 2099},
			{103665, 2097},
			{99470, 2095},
			{95278, 2093},
			{91090, 2091},
			{86907, 2089},
			{82728, 2087},
			{78553, 2085},
			{74382, 2083},
			{70215, 2081},
			{66052, 2079},
			{61893, 2077},
			{57739, 2075},
			{53588, 2073},
			{49442, 2071},
			{45299, 2069},
			{41161, 2067},
			{37027, 2065},
			{32896, 2063},
			{28770, 2061},
			{24648, 2059},
			{20530, 2057},
			{16416, 2055},
			{12306, 2053},
			{8201, 2051},
			{4098, 2049}
		};
	
	public static float finv(float a) {
		int ai = Float.floatToIntBits(a);
		
		int sign, exp, man, key, cons, gradi, term, frac, result;
		sign = ai & 0x80000000;
		exp = (ai >> 23) & 0xff;
		man = ai & 0x7fffff;
		
		key = (man >> 13) & 0x3ff;
		
		cons = inv_table[key][0];
		gradi = inv_table[key][1];
		
		term = (man & 0x1FFF) * gradi;
		term >>= 12;
		
		frac = cons - term;
		if (exp <= 253) {
			exp = 253 - exp;
		} else {
			exp = 0;
		}
		
		exp <<= 23;
		frac &= 0x7FFFFF;
		
		result = sign | exp | frac;
		
		return Float.intBitsToFloat(result);
	}
	
	public static float fsqr(float a) {
		// TODO
		return (float)Math.sqrt(a);
	}
	
	public static float fneg(float a) {
		return -a;
	}
}

/*
// fmulのテスト
try {
	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	String line;
	while ((line = br.readLine()) != null) {
		int a=0;
		int b=0;
		for (int i=0; i<32; i++) {
			a += (line.charAt(i) == '1' ? 1 : 0) * (1 << (31-i));
			b += (line.charAt(32+i) == '1' ? 1 : 0) * (1 << (31-i));
		}
		float fa, fb;
		fa = Float.intBitsToFloat(a);
		fb = Float.intBitsToFloat(b);
		
		float fc = FPU.fmul(fa, fb);
		int c = Float.floatToIntBits(fc);
		
		for (int i=0; i<8; i++) {
			System.out.printf("%X", ((c >> 4*(7-i)) & 15));
		}
		System.out.println();
	}
} catch (Exception e) {}

System.exit(0);
*/
